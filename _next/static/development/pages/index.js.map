{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///../node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js","webpack:///delegated ../node_modules/react-dom/index.js from dll-reference dll_e6a94776c4176f860599","webpack:///delegated ../node_modules/react/index.js from dll-reference dll_e6a94776c4176f860599","webpack:///../packages/portal/src/index.ts","webpack:///../packages/portal/src/useOnClickOutside.ts","webpack:///../packages/portal/src/usePortal.ts","webpack:///./pages/index.tsx","webpack:///external \"dll_e6a94776c4176f860599\""],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        var mod = require(\"/Users/sundayfunday/Projects/personal/teleport-components/docs/pages/index.tsx\");\n        if (true && module.hot) {\n          module.hot.accept(\"/Users/sundayfunday/Projects/personal/teleport-components/docs/pages/index.tsx\", function () {\n            if (!next.router.components[\"/\"]) return;\n            var updatedPage = require(\"/Users/sundayfunday/Projects/personal/teleport-components/docs/pages/index.tsx\");\n            next.router.update(\"/\", updatedPage);\n          });\n        }\n        return mod;\n      }\n    ]);\n  ","module.exports = (__webpack_require__(/*! dll-reference dll_e6a94776c4176f860599 */ \"dll-reference dll_e6a94776c4176f860599\"))(\"../node_modules/react-dom/index.js\");","module.exports = (__webpack_require__(/*! dll-reference dll_e6a94776c4176f860599 */ \"dll-reference dll_e6a94776c4176f860599\"))(\"../node_modules/react/index.js\");","export * from './usePortal'\n","import { useEffect } from 'react'\n\ninterface Ref {\n  current: any\n}\n\ntype Handler = (event: Event) => void\n\nconst containsTarget = (target: Ref, event: Event): boolean =>\n  target?.current.contains(event.target)\n\nexport const useOnClickOutside = (container: Ref, ref: Ref, handler: Handler): void => {\n  useEffect(() => {\n    const listener = (event: Event): void => {\n      if (containsTarget(container, event) || containsTarget(ref, event)) {\n        return\n      }\n\n      handler(event)\n    }\n\n    document.addEventListener('mousedown', listener)\n    document.addEventListener('touchstart', listener)\n\n    return () => {\n      document.removeEventListener('mousedown', listener)\n      document.removeEventListener('touchstart', listener)\n    }\n  }, [container, ref, handler])\n}\n","import { ReactNode, ReactPortal, MouseEvent, useState, useEffect, useRef, useCallback } from 'react'\nimport { createPortal } from 'react-dom'\nimport { useOnClickOutside } from './useOnClickOutside'\n\nexport interface Options {\n  closeOnOutsideClick: boolean\n}\n\nexport interface PortalProps {\n  children: ReactNode\n}\n\nexport interface IPortal {\n  ref: { current: any }\n  isOpen: boolean\n  open: (event: MouseEvent) => void\n  close: (event: MouseEvent) => void\n  toggle: (event: MouseEvent) => void\n  Portal: (props: PortalProps) => ReactPortal\n}\n\nconst defaultOptions: Options = {\n  closeOnOutsideClick: true\n}\n\nexport const usePortal = (options: Options = defaultOptions): IPortal => {\n  const [isOpen, setOpen] = useState<boolean>(false)\n  const latestIsOpen = useRef(isOpen)\n  const refNode = useRef()\n\n  const syncronizeAndSetOpen = useCallback((value) => {\n    latestIsOpen.current = value\n    setOpen(value)\n  }, [])\n\n  const open = useCallback(\n    (event: MouseEvent | Event) => {\n      syncronizeAndSetOpen(true)\n    },\n    [syncronizeAndSetOpen]\n  )\n\n  const close = useCallback(\n    (event: MouseEvent | Event) => {\n      if (latestIsOpen.current) {\n        syncronizeAndSetOpen(false)\n      }\n    },\n    [syncronizeAndSetOpen]\n  )\n\n  const toggle = useCallback(\n    (event: MouseEvent | Event) => {\n      if (latestIsOpen.current) {\n        close(event)\n      } else {\n        open(event)\n      }\n    },\n    [open, close]\n  )\n\n  const Portal = (props: { children: ReactNode }): ReactPortal => {\n    const portalNode = useRef(document.createElement('div'))\n\n    useOnClickOutside(portalNode, refNode, (event: Event) => {\n      if (options.closeOnOutsideClick) {\n        close(event)\n      }\n    })\n\n    useEffect(() => {\n      const element = portalNode.current\n      document.body.appendChild(element)\n\n      return () => {\n        document.body.removeChild(element)\n      }\n    }, [])\n\n    return createPortal(props.children, portalNode.current)\n  }\n\n  return {\n    open,\n    close,\n    toggle,\n    Portal,\n    isOpen,\n    ref: refNode\n  }\n}\n","import * as React from 'react'\nimport { usePortal } from '@teleport/portal' // alias, check tsconfig.json `paths` section\n\nconst HomePage: React.FC = (): React.ReactElement => {\n  const { Portal, ref, isOpen, close, toggle } = usePortal()\n\n  return (\n    <div>\n      <button ref={ref} onClick={toggle}>\n        Open Portal\n      </button>\n      {isOpen === true ? (\n        <Portal>\n          <h1>Example Test</h1>\n          <button onClick={close}>Close Portal</button>\n        </Portal>\n      ) : null}\n    </div>\n  )\n}\n\nexport default HomePage\n","module.exports = dll_e6a94776c4176f860599;"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACfA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAmBA;AACA;AADA;AAIA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;;;;;;;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACrBA;;;;A","sourceRoot":""}