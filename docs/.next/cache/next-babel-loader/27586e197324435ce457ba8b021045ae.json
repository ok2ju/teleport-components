{"ast":null,"code":"import { useEffect } from 'react';\n\nconst containsTarget = (target, event) => target === null || target === void 0 ? void 0 : target.current.contains(event.target);\n\nexport const useOnClickOutside = (container, ref, handler) => {\n  useEffect(() => {\n    const listener = event => {\n      if (containsTarget(container, event) || containsTarget(ref, event)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [container, ref, handler]);\n};","map":{"version":3,"sources":["/Users/sundayfunday/Projects/personal/teleport-components/packages/portal/src/useOnClickOutside.ts"],"names":["useEffect","containsTarget","target","event","current","contains","useOnClickOutside","container","ref","handler","listener","document","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAQA,MAAMC,cAAc,GAAG,CAACC,MAAD,EAAcC,KAAd,KACrBD,MADqB,aACrBA,MADqB,uBACrBA,MAAM,CAAEE,OAAR,CAAgBC,QAAhB,CAAyBF,KAAK,CAACD,MAA/B,CADF;;AAGA,OAAO,MAAMI,iBAAiB,GAAG,CAACC,SAAD,EAAiBC,GAAjB,EAA2BC,OAA3B,KAAsD;AACrFT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,QAAQ,GAAIP,KAAD,IAAwB;AACvC,UAAIF,cAAc,CAACM,SAAD,EAAYJ,KAAZ,CAAd,IAAoCF,cAAc,CAACO,GAAD,EAAML,KAAN,CAAtD,EAAoE;AAClE;AACD;;AAEDM,MAAAA,OAAO,CAACN,KAAD,CAAP;AACD,KAND;;AAQAQ,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCF,QAAvC;AACAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,YAA1B,EAAwCF,QAAxC;AAEA,WAAO,MAAM;AACXC,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CH,QAA1C;AACAC,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,YAA7B,EAA2CH,QAA3C;AACD,KAHD;AAID,GAhBQ,EAgBN,CAACH,SAAD,EAAYC,GAAZ,EAAiBC,OAAjB,CAhBM,CAAT;AAiBD,CAlBM","sourcesContent":["import { useEffect } from 'react'\n\ninterface Ref {\n  current: any\n}\n\ntype Handler = (event: Event) => void\n\nconst containsTarget = (target: Ref, event: Event): boolean =>\n  target?.current.contains(event.target)\n\nexport const useOnClickOutside = (container: Ref, ref: Ref, handler: Handler): void => {\n  useEffect(() => {\n    const listener = (event: Event): void => {\n      if (containsTarget(container, event) || containsTarget(ref, event)) {\n        return\n      }\n\n      handler(event)\n    }\n\n    document.addEventListener('mousedown', listener)\n    document.addEventListener('touchstart', listener)\n\n    return () => {\n      document.removeEventListener('mousedown', listener)\n      document.removeEventListener('touchstart', listener)\n    }\n  }, [container, ref, handler])\n}\n"]},"metadata":{},"sourceType":"module"}