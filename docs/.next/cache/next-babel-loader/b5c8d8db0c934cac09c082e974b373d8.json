{"ast":null,"code":"import { useState, useEffect, useRef, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useOnClickOutside } from './useOnClickOutside';\nvar defaultOptions = {\n  closeOnOutsideClick: true\n};\nexport var usePortal = function usePortal() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setOpen = _useState[1];\n\n  var latestIsOpen = useRef(isOpen);\n  var portalNode = useRef(document.createElement('div'));\n  var refNode = useRef();\n  var syncronizeAndSetOpen = useCallback(function (value) {\n    latestIsOpen.current = value;\n    setOpen(value);\n  }, []);\n  var open = useCallback(function (event) {\n    syncronizeAndSetOpen(true);\n  }, [syncronizeAndSetOpen]);\n  var close = useCallback(function (event) {\n    if (latestIsOpen.current) {\n      syncronizeAndSetOpen(false);\n    }\n  }, [syncronizeAndSetOpen]);\n  var toggle = useCallback(function (event) {\n    if (latestIsOpen.current) {\n      close(event);\n    } else {\n      open(event);\n    }\n  }, [open, close]);\n  useOnClickOutside(portalNode, refNode, useCallback(function (event) {\n    if (options.closeOnOutsideClick) {\n      close(event);\n    }\n  }, [close, options.closeOnOutsideClick]));\n\n  var Portal = function Portal(props) {\n    useEffect(function () {\n      document.body.appendChild(portalNode.current);\n      return function () {\n        document.body.removeChild(portalNode.current);\n      };\n    }, []);\n    return createPortal(props.children, portalNode.current);\n  };\n\n  return {\n    open: open,\n    close: close,\n    toggle: toggle,\n    Portal: Portal,\n    isOpen: isOpen,\n    ref: refNode\n  };\n};","map":{"version":3,"sources":["/Users/sundayfunday/Projects/personal/teleport-components/packages/portal/src/usePortal.ts"],"names":["useState","useEffect","useRef","useCallback","createPortal","useOnClickOutside","defaultOptions","closeOnOutsideClick","usePortal","options","isOpen","setOpen","latestIsOpen","portalNode","document","createElement","refNode","syncronizeAndSetOpen","value","current","open","event","close","toggle","Portal","props","body","appendChild","removeChild","children","ref"],"mappings":"AAAA,SAA6CA,QAA7C,EAAuDC,SAAvD,EAAkEC,MAAlE,EAA0EC,WAA1E,QAA6F,OAA7F;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAmBA,IAAMC,cAAuB,GAAG;AAC9BC,EAAAA,mBAAmB,EAAE;AADS,CAAhC;AAIA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAgD;AAAA,MAA/CC,OAA+C,uEAA5BH,cAA4B;;AAAA,kBAC7CN,QAAQ,CAAC,KAAD,CADqC;AAAA,MAChEU,MADgE;AAAA,MACxDC,OADwD;;AAEvE,MAAMC,YAAY,GAAGV,MAAM,CAACQ,MAAD,CAA3B;AACA,MAAMG,UAAU,GAAGX,MAAM,CAACY,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAD,CAAzB;AACA,MAAMC,OAAO,GAAGd,MAAM,EAAtB;AAEA,MAAMe,oBAAoB,GAAGd,WAAW,CAAC,UAACe,KAAD,EAAW;AAClDN,IAAAA,YAAY,CAACO,OAAb,GAAuBD,KAAvB;AACAP,IAAAA,OAAO,CAACO,KAAD,CAAP;AACD,GAHuC,EAGrC,EAHqC,CAAxC;AAKA,MAAME,IAAI,GAAGjB,WAAW,CACtB,UAACkB,KAAD,EAA+B;AAC7BJ,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,GAHqB,EAItB,CAACA,oBAAD,CAJsB,CAAxB;AAOA,MAAMK,KAAK,GAAGnB,WAAW,CACvB,UAACkB,KAAD,EAA+B;AAC7B,QAAIT,YAAY,CAACO,OAAjB,EAA0B;AACxBF,MAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD;AACF,GALsB,EAMvB,CAACA,oBAAD,CANuB,CAAzB;AASA,MAAMM,MAAM,GAAGpB,WAAW,CACxB,UAACkB,KAAD,EAA+B;AAC7B,QAAIT,YAAY,CAACO,OAAjB,EAA0B;AACxBG,MAAAA,KAAK,CAACD,KAAD,CAAL;AACD,KAFD,MAEO;AACLD,MAAAA,IAAI,CAACC,KAAD,CAAJ;AACD;AACF,GAPuB,EAQxB,CAACD,IAAD,EAAOE,KAAP,CARwB,CAA1B;AAWAjB,EAAAA,iBAAiB,CACfQ,UADe,EAEfG,OAFe,EAGfb,WAAW,CACT,UAACkB,KAAD,EAAkB;AAChB,QAAIZ,OAAO,CAACF,mBAAZ,EAAiC;AAC/Be,MAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF,GALQ,EAMT,CAACC,KAAD,EAAQb,OAAO,CAACF,mBAAhB,CANS,CAHI,CAAjB;;AAaA,MAAMiB,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAiD;AAC9DxB,IAAAA,SAAS,CAAC,YAAM;AACda,MAAAA,QAAQ,CAACY,IAAT,CAAcC,WAAd,CAA0Bd,UAAU,CAACM,OAArC;AAEA,aAAO,YAAM;AACXL,QAAAA,QAAQ,CAACY,IAAT,CAAcE,WAAd,CAA0Bf,UAAU,CAACM,OAArC;AACD,OAFD;AAGD,KANQ,EAMN,EANM,CAAT;AAQA,WAAOf,YAAY,CAACqB,KAAK,CAACI,QAAP,EAAiBhB,UAAU,CAACM,OAA5B,CAAnB;AACD,GAVD;;AAYA,SAAO;AACLC,IAAAA,IAAI,EAAJA,IADK;AAELE,IAAAA,KAAK,EAALA,KAFK;AAGLC,IAAAA,MAAM,EAANA,MAHK;AAILC,IAAAA,MAAM,EAANA,MAJK;AAKLd,IAAAA,MAAM,EAANA,MALK;AAMLoB,IAAAA,GAAG,EAAEd;AANA,GAAP;AAQD,CAvEM","sourcesContent":["import { ReactNode, ReactPortal, MouseEvent, useState, useEffect, useRef, useCallback } from 'react'\nimport { createPortal } from 'react-dom'\nimport { useOnClickOutside } from './useOnClickOutside'\n\nexport interface Options {\n  closeOnOutsideClick: boolean\n}\n\nexport interface PortalProps {\n  children: ReactNode\n}\n\nexport interface IPortal {\n  ref: { current: any }\n  isOpen: boolean\n  open: (event: MouseEvent) => void\n  close: (event: MouseEvent) => void\n  toggle: (event: MouseEvent) => void\n  Portal: (props: PortalProps) => ReactPortal\n}\n\nconst defaultOptions: Options = {\n  closeOnOutsideClick: true\n}\n\nexport const usePortal = (options: Options = defaultOptions): IPortal => {\n  const [isOpen, setOpen] = useState(false)\n  const latestIsOpen = useRef(isOpen)\n  const portalNode = useRef(document.createElement('div'))\n  const refNode = useRef()\n\n  const syncronizeAndSetOpen = useCallback((value) => {\n    latestIsOpen.current = value\n    setOpen(value)\n  }, [])\n\n  const open = useCallback(\n    (event: MouseEvent | Event) => {\n      syncronizeAndSetOpen(true)\n    },\n    [syncronizeAndSetOpen]\n  )\n\n  const close = useCallback(\n    (event: MouseEvent | Event) => {\n      if (latestIsOpen.current) {\n        syncronizeAndSetOpen(false)\n      }\n    },\n    [syncronizeAndSetOpen]\n  )\n\n  const toggle = useCallback(\n    (event: MouseEvent | Event) => {\n      if (latestIsOpen.current) {\n        close(event)\n      } else {\n        open(event)\n      }\n    },\n    [open, close]\n  )\n\n  useOnClickOutside(\n    portalNode,\n    refNode,\n    useCallback(\n      (event: Event) => {\n        if (options.closeOnOutsideClick) {\n          close(event)\n        }\n      },\n      [close, options.closeOnOutsideClick]\n    )\n  )\n\n  const Portal = (props: { children: ReactNode }): ReactPortal => {\n    useEffect(() => {\n      document.body.appendChild(portalNode.current)\n\n      return () => {\n        document.body.removeChild(portalNode.current)\n      }\n    }, [])\n\n    return createPortal(props.children, portalNode.current)\n  }\n\n  return {\n    open,\n    close,\n    toggle,\n    Portal,\n    isOpen,\n    ref: refNode\n  }\n}\n"]},"metadata":{},"sourceType":"module"}